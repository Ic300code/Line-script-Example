local duel = {}

---------------------------------------------------------------------------------------------------

local BOTS = require(script.Parent.Parent.BotsModule)

---------------------------------------------------------------------------------------------------

local moveDirection = nil

---------------------------------------------------------------------------------------------------

local dieConnection = nil
local dieConnection2 = nil

---------------------------------------------------------------------------------------------------

local died = false
local winner = nil
local loser = nil

---------------------------------------------------------------------------------------------------

duel.remove = function()

	local obbyFolder = workspace.Map.Obby.Generated

	for i, v in pairs(obbyFolder:GetChildren()) do

		if v.Name ~= "Spawn" then

			v:Destroy()

			task.wait()

		end

	end

end

---------------------------------------------------------------------------------------------------

duel.create = function()

	local obbyFolder = workspace.Map.Obby
	local presets = script.Presets

	local lastPreset = obbyFolder.Generated.Spawn

	for i = 1, 100 do

		local preset = presets:GetChildren()[math.random(1, #presets:GetChildren())]

		local newPreset = preset:Clone()
		newPreset.Parent = obbyFolder.Generated
		newPreset.Name = "Obby"..i

		newPreset:PivotTo(lastPreset.Exit:GetPivot())

		lastPreset = newPreset

		task.wait()

	end

end

---------------------------------------------------------------------------------------------------

duel.setupPlayers = function(dueled, dueler)

	local char = nil
	
	if dueler:IsA("Player") then
		
		pcall(function()

			dueler.Character.Humanoid.IkControl.Enabled = false

		end)
		
		char = dueler.Character
		
		char:SetPrimaryPartCFrame(workspace.Map.Obby.Generated.Spawn.Teleport2.CFrame)
		
		game.ReplicatedStorage.RemotesEvent.Rounds.Duel.MovePlayer:FireClient(dueler, true)
		
	else
		
		char = BOTS.createCharacter(workspace.Map.Obby.Generated.Spawn.Teleport2.CFrame)
		
		char.Humanoid:Move(Vector3.new(0, 0, -1))

		local chance = 40 ; if dueled:IsA("Player") then chance = 20 end

		BOTS.moveDuel(char.PrimaryPart, chance)
		
	end

	local dChar = nil
	
	task.wait(.1)

	if dueled:GetAttribute("isBot") then

		dChar = BOTS.createCharacter(workspace.Map.Obby.Generated.Spawn.Teleport1.CFrame)

		dChar.Humanoid:Move(Vector3.new(0, 0, -1))
		
		local chance = 40 ; if dueler:IsA("Player") then chance = 20 end

		BOTS.moveDuel(dChar.PrimaryPart, chance)

	else
		
		pcall(function()
			
			dueled.Character.Humanoid.IkControl.Enabled = false
			
		end)

		dChar = dueled.Character
		
		dChar:SetPrimaryPartCFrame(workspace.Map.Obby.Generated.Spawn.Teleport1.CFrame)

		game.ReplicatedStorage.RemotesEvent.Rounds.Duel.MovePlayer:FireClient(dueled, true)

	end

	if char and dChar then

		char.Humanoid.WalkSpeed = 16
		char.Humanoid.JumpPower = 50
		dChar.Humanoid.WalkSpeed = 16
		dChar.Humanoid.JumpPower = 50

		moveDirection = game:GetService("RunService"):BindToRenderStep("Move", Enum.RenderPriority.Character.Value, function()

			if (dChar and dChar.PrimaryPart) and (char and char.PrimaryPart) then

				dChar:SetPrimaryPartCFrame(CFrame.new(dChar.PrimaryPart.Position) * CFrame.Angles(0, 0, 0))
				char:SetPrimaryPartCFrame(CFrame.new(char.PrimaryPart.Position) * CFrame.Angles(0, 0, 0))

			end

		end)

		dieConnection = char.Humanoid.Died:Once(function()

			if not died then

				if dieConnection2 then

					dieConnection2:Disconnect()

				end

				died = true

				warn("player died; winner : "..dueled.Name..", loser : "..dueler.Name)

				winner = dueled
				loser = dueler

			end

		end)

		dieConnection = dChar.Humanoid.Died:Once(function()

			if not died then

				if dieConnection then

					dieConnection:Disconnect()

				end

				died = true

				warn("player died; winner : "..dueler.Name..", loser : "..dueled.Name)

				winner = dueler
				loser = dueled

			end

		end)

	end

end

---------------------------------------------------------------------------------------------------

duel.events = function(dueler)

	local dueled = nil

	local players = game.Players:GetPlayers()
	dueled = game.ReplicatedStorage.InVoting:GetChildren()[math.random(1, #game.ReplicatedStorage.InVoting:GetChildren())]
	
	if dueled == dueler then
		
		for i = 1, 10 do
			
			dueled = game.ReplicatedStorage.InVoting:GetChildren()[math.random(1, #game.ReplicatedStorage.InVoting:GetChildren())]
			
			if dueled ~= dueler then
				
				break
				
			end
			
		end
		
	end
	
	local image = ""
	local dImage = ""
	
	if not dueler:GetAttribute("isBot") then
		
		dueler = game.Players[dueler.Name]
		dImage = game.Players:GetUserThumbnailAsync(dueler.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
		
	else
		
		dImage = "rbxassetid://104163217298112"
		
	end

	if dueled == game.ReplicatedStorage.InVoting[dueler.Name] then

		for i = 1, 10 do

			dueled = game.ReplicatedStorage.InVoting:GetChildren()[math.random(1, #game.ReplicatedStorage.InVoting:GetChildren())]

			if dueled ~= game.ReplicatedStorage.InVoting[dueler.Name] then

				break

			end

		end

	end

	if dueled:GetAttribute("isBot") then

		image = "rbxassetid://104163217298112"

	else

		dueled = game.Players[dueled.Name]
		image = game.Players:GetUserThumbnailAsync(dueled.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)

	end

	task.wait()

	return dueled, dueler, image, dImage

end

---------------------------------------------------------------------------------------------------

duel.setup = function(inf)
	
	local dueled, dueler, image, dImage = duel.events(inf)

	for index, template in pairs(game.ReplicatedStorage.InVoting:GetChildren()) do

		template:SetAttribute("Health", 3)

	end

	died = false

	game.ReplicatedStorage.RemotesEvent.Rounds.DuelStarted:FireAllClients()

	task.delay(2, function()

		workspace.Sounds.Duel:Play()

	end)

	task.wait(5)

	for index, player in pairs(game.Players:GetPlayers()) do

		local gui = game.ReplicatedStorage.Game.RoundGuis.Duel:Clone()
		gui.Parent = player.PlayerGui

	end
	
	task.wait(.25)
	
	game.ReplicatedStorage.RemotesEvent.Rounds.Duel.DuelPlayers:FireAllClients(dImage, image)
	
	task.wait(5)

	duel.create()
	duel.setupPlayers(dueled, dueler)

	game.ReplicatedStorage.RemotesEvent.Rounds.Duel.Running:FireAllClients()

	for i = 1, 100 do

		if died then

			break

		end

		task.wait(1)

	end

	if winner and loser then

		local player = game.Players:FindFirstChild(winner.Name)

		if player and player:IsA("Player") then

			player:LoadCharacter()
			
			player.Character.Humanoid.WalkSpeed = 0
			player.Character.Humanoid.JumpPower = 0
			
		end
		
		if loser:IsA("Player") then
			
			local template = game.ReplicatedStorage.InVoting:FindFirstChild(loser.Name)
			
			template:Destroy()
			
		else
			
			loser:Destroy()
			
		end

		loser:SetAttribute("Health", 0)
		
	else
		
		local random = math.random(1, 2)
		local l = {dueler, dueled}
		
		loser:Destroy()
		
		if l[random]:IsA("Player") then
			
			local player = game.Players[loser.Name]

			local teleportService = game:GetService("TeleportService")

			teleportService:Teleport(
				72617573585302,
				game.Players[player.Name],
				false
			)
			
		end

	end

	if moveDirection then

		moveDirection:Disconnect()

	end

	game.ReplicatedStorage.RemotesEvent.Rounds.Duel.DuelFinished:FireAllClients()
	
	task.wait(2.5)

	for index, player in pairs(game.Players:GetPlayers()) do

		if player.PlayerGui:FindFirstChild("Duel") then

			player.PlayerGui.Duel:Destroy()

		end

	end
	
	task.delay(5, function()
	
		duel.remove()
		
	end)

end

---------------------------------------------------------------------------------------------------

return duel
